import SCons.Warnings

Import('env')

env = env.Clone()

llvm_version = env['llvm_version']

########################################################################
#
#  LLVM plugin building
#

env.AppendUnique(
    SHLINKFLAGS='${("", "-Wl,--no-undefined")["gnulink" in TOOLS]}',
    LIBS='LLVM-$llvm_version',
    )
env.MergeFlags('!llvm-config --cxxflags --ldflags')

# bug fix for SCons 2.0.1 and earlier
try:
    env['CFLAGS'].remove('-std=c++11')
    env.AppendUnique(CXXFLAGS='-std=c++11')
except ValueError:
    pass

# GCC does not allow "-pg" and "-fomit-frame-pointer" to be used
# simultaneously.  The latter is added by llvm-config.
if env['PROFILE']:
    try:
        env['CCFLAGS'].remove('-fomit-frame-pointer')
    except ValueError:
        pass

if not env['OPTIMIZE']:
    for level in 2, 3:
        try:
            env['CCFLAGS'].remove('-O%s' % level)
            env['CPPFLAGS'].remove('-Wp,-D_FORTIFY_SOURCE=2')
        except KeyError:
            pass
        except ValueError:
            pass

plugin = env.SharedLibrary(
    'Wpds',
    [
        'AssignmentsReturnBlock.cpp',
        'Calls.cpp',
        'CollectVariables.cpp',
        'Conditionals.cpp',
        'diagnostic.cpp',
        'ExchangeFormals.cpp',
        'ExchangeAssignments.cpp',
        'ExchangeReturns.cpp',
        'FilterVariables.cpp',
        'FindIndirectCalls.cpp',
        'LowerIndirectCalls.cpp',
        'MainFunction.cpp',
        'MayMustCall.cpp',
        'MayMustModifyGlobal.cpp',
        'MayMustPass.cpp',
        'PrintPrologue.cpp',
        'PrintSource.cpp',
        'ResolveCallees.cpp',
        'ResolveCalleesTester.cpp',
        'Rules.cpp',
        'UnknownValue.cpp',
        ],
    INCPREFIX='-isystem ',
    SHLIBPREFIX=None,
    )

Default(plugin)


########################################################################
#
#  full test suite starting from C source code
#

SConscript(
    dirs=[
        'tests',
        ],
    exports='env',
    )
