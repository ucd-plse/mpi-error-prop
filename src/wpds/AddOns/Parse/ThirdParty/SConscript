# Run the python program
# $Id: SConscript 1715 2012-02-22 20:53:40Z driscoll $
import os, sys
from xerces_consts import IsZip, get_name

Import('Debug')
Import('WaliDir')
Import('LibInstallDir')
Import('MkStatic')
Import('Platform')
Import('Is64')

if Debug:
    print '\n+++ Entered "#/AddOns/Parse/ThirdParty/SConscript"\n'

Name = get_name(Is64)
    
XercesDir = Name
Export('XercesDir')
ThirdParty = os.path.join(WaliDir,'AddOns','Parse','ThirdParty')

# download binary distribution archive
archive = Name + ('.tar.gz','.zip')[IsZip]
env = Environment(
    archive = File(archive),
    mirror  = 'https://archive.apache.org/dist/xerces/c/3/binaries',
    # NAK - `$archive` is not compatible with external invocation of this script
    url     = '$mirror/%s' % archive,
    )
if not File(archive,ThirdParty).exists():
    command = ['curl', '--silent', '--fail', '--show-error', '--output', '$archive', '$url']
    action = Action([command])
    status = env.Execute(action)
    if status:
        raise BuildError(node=archive, status=status, filename=str(archive), action=action, command=command)


# unpack the archive to get the good stuff out
if not File('README', os.path.join(ThirdParty,XercesDir)).exists():
    unpack = (
        ['$TAR', '--directory', '$archive.dir', '-zxf', '$archive'],
        ['unzip', '-o', '-d', '$archive.dir', '$archive'],
        )[IsZip]
    env.Execute([unpack])


# copy Xerces library into common WALi library area

import platform
if platform.system() == 'Windows':
   libname = 'lib/xerces-c_3.lib'
else:
   libname = 'lib/${LIBPREFIX}xerces-c${LIBSUFFIX}'

library = ('lib/libxerces-c-3.1$SHLIBSUFFIX',libname)[MkStatic]
instlib = env.Install(LibInstallDir, env.File(library,XercesDir))

#print 'path  = ', instlib[0].path
#print 'apath = ', instlib[0].abspath
if 'Darwin' == Platform and not MkStatic:
    env.AddPostAction(instlib,
                      "install_name_tool -id %s %s" % (instlib[0].abspath,instlib[0].path))

# cannot use Install for symlinks due to known SCons bug:
# <http://scons.tigris.org/issues/show_bug.cgi?id=1604>

# generic symlinking action
def symlink(target, source, env):
    [target] = target
    dest = source[0].read()
    print 'Dest: %s' % dest
    print 'Tgt : %s' % str(target)
    os.symlink(dest, str(target))

# add shared-lib symlinks
if not MkStatic:
    dest = Value(env.subst('libxerces-c-3.1$SHLIBSUFFIX'))
    #print dest.read()
    real = env.File(dest.read(), LibInstallDir)
    #print real
    target = env.File('libxerces-c$SHLIBSUFFIX', LibInstallDir)
    #print target
    Command(target, [dest, real], symlink)


# does not clean up completely due to known SCons bugs:
# <http://scons.tigris.org/issues/show_bug.cgi?id=1706>
# <http://scons.tigris.org/issues/show_bug.cgi?id=2095>
Clean('.', XercesDir)


built = instlib
Return('built')
